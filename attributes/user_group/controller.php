<?php
namespace Concrete\Attribute\UserGroup;

use Concrete\Core\Attribute\Controller as AttributeTypeController;
use Concrete\Core\Attribute\FontAwesomeIconFormatter;
use Concrete\Core\Entity\Attribute\Value\Value\NumberValue;
use Concrete\Core\User\Group\Group;
use SimpleXMLElement;

class Controller extends AttributeTypeController
{
    public function getIconFormatter()
    {
        return new FontAwesomeIconFormatter('users');
    }

    public function form()
    {
        //TODO Pass group object to form
    }

    public function getAttributeValueClass()
    {
        return NumberValue::class;
    }

    public function getDisplayValue()
    {
        /** @var \Concrete\Core\User\Group\Group $group */
        $group = $this->getGroup($this->getAttributeValue()->getValue());

        //TODO Check what would be the correct response in this case.
        return $group->getGroupName();
    }

    public function getPlainTextValue()
    {
        /** @var \Concrete\Core\User\Group\Group $group */
        $group = $this->getGroup($this->getAttributeValue()->getValue());

        return $group->getGroupName();
    }

    public function createAttributeValue($value)
    {
        //TODO Create logic
    }

    public function createAttributeValueFromRequest()
    {
        //TODO Create logic
    }

    public function importValue(\SimpleXMLElement $akv)
    {
        //TODO Create logic
    }

    public function exportValue(SimpleXMLElement $akv)
    {
        return parent::exportValue($akv); // TODO: Change the autogenerated stub
    }

    private function getGroup($id)
    {
        $group = Group::getByID($id);

        if (!is_object($group)) {
            //TODO Return group not found error/exception?
            return null;
        }

        return $group;
    }

}
